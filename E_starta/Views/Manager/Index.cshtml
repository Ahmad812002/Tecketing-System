<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/ManagerStyleSheet.css" rel="stylesheet" asp-append-version="true">
    <link href="~/AlertPopupStyleSheet.css" rel="stylesheet" asp-append-version="true">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500&display=swap" rel="stylesheet" />
</head>
<body>
    @if(Model == null)
    {
        <p>The Model is null</p>
    }

    @using (Html.BeginForm("Search", "Manager", FormMethod.Post, new { id = "searchForm" }))
    {
        <div class="input-group" style="align-items:center">
            <input type="text" id="ticketId" name="ticketId" class="form-control" placeholder="Enter Ticket ID" />
            <input type="hidden" id="hiddenUserId" />
            <button type="submit" id="search-button" class="btn btn-primary" style="border-radius:3px;">
                <i class="fas fa-search"></i>
            </button>
        </div>
    }

    <div id="popup" class="modal" style="display: @(ViewBag.ShowModal == true ? "block" : "none");">
        <div class="modal-content" style="margin:9%; margin-left:25%;">
            <span class="close">&times;</span>
            <div id="ticketDetailsContent">
                @if (Model.ticket != null)
                {
                    if (Model.employee != null)
                    {
                        <p><strong>Username:</strong> @Model.user.Username</p>
                        <p><strong>Email:</strong> @Model.user.Email</p>
                        <p><strong>Ticket ID:</strong> @Model.ticket.Id</p>
                        <p><strong>Employee Name:</strong> @Model.employee.Username</p>
                        <p><strong>Employee Email:</strong> @Model.employee.Email</p>
                        <p><strong>Ticket Status:</strong> @Model.ticket.Status</p>
                        <p><strong>Created Date:</strong> @Model.ticket.CreatedAt.ToString("MM/dd/yyyy")</p>
                        <p><strong>Resolved Date:</strong> @Model.ticket.ResolvedAt?.ToString("MM/dd/yyyy")</p>
                        <button type="button" class="btn btn-danger btn-sm delete-btn" data-ticket-id="@Model.ticket.Id" style="margin-left:90%;">Delete</button>
                    }
                    else
                    {
                        <p><strong>Username:</strong> @Model.user.Username</p>
                        <p><strong>Email:</strong> @Model.user.Email</p>
                        <p><strong>Ticket ID:</strong> @Model.ticket.Id</p>
                        <p><strong>Employee Name:</strong> Still there is no Employee assigned this ticket</p>
                        <p><strong>Employee Email:</strong> --</p>
                        <p><strong>Ticket Status:</strong> @Model.ticket.Status</p>
                        <p><strong>Created Date:</strong> @Model.ticket.CreatedAt.ToString("MM/dd/yyyy")</p>
                        <p><strong>Resolved Date:</strong> @Model.ticket.ResolvedAt?.ToString("MM/dd/yyyy")</p>
                        <button type="button" class="btn btn-danger btn-sm delete-btn" data-ticket-id="@Model.ticket.Id" style="margin-left:90%;">Delete</button>
                    }
                }

            </div>
        </div>
    </div>

    <div class="confirm-popup" id="ConfirmPopup">
        <div class="popup-content">
            <p>Are you sure you want to delete this ticket?</p>
            <div class="btn-group">
                <form id="confirmForm" method="post" action="/Manager/DeleteTicket">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="confirmTicketId" name="ticketId" />
                    <input type="hidden" id="confirmEmployeeId" name="employeeId" />
                    <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                </form>
                <button type="button" class="btn btn-secondary btn-sm" id="closeConfirmPopup">Cancel</button>
            </div>
        </div>
    </div>

    @if (Model?.result?.ErrorMessage != null)
    {
        <div class="alert-popup show" id="ErrorPopup">
            <p><i class="fas fa-exclamation-triangle"></i> @Model.result.ErrorMessage</p>
        </div>
    }
    @if (Model?.result?.Message != null)
    {
        <div class="Message-popup show" id="MessagePopup">
            <p><i class="fas fa-check-circle"></i> @Model.result.Message</p>
        </div>
    }

    <div class="container">
        <div class="mt-4">
            <form method="get" asp-action="Index">
                <div class="table-responsive">
                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Ticket ID</th>
                                <th>User ID</th>
                                <th>Employee ID</th>
                                <th>Username</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="managerTableBody">
                            @foreach (var manager in Model.manager)
                            {
                                <tr>
                                    <td>@manager.TicketId</td>
                                    <td>@manager.UserId</td>
                                    <td>@manager.EmployeeId</td>
                                    <td>@manager.Username</td>
                                    <td>
                                        <button type="button" class="btn btn-danger btn-sm delete-btn" data-ticket-id="@manager.TicketId" data-employee-id="@manager.EmployeeId">Delete</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var errorAlert = document.getElementById('ErrorPopup');
            var messageAlert = document.getElementById('MessagePopup');

            var confirmPopup = document.getElementById('ConfirmPopup');
            var confirmForm = document.getElementById('confirmForm');
            var confirmTicketId = document.getElementById('confirmTicketId');
            var confirmEmployeeId = document.getElementById('confirmEmployeeId');
            var closeConfirmPopup = document.getElementById('closeConfirmPopup');

            if (errorAlert) {
                errorAlert.classList.add('show');
                setTimeout(function () {
                    errorAlert.classList.remove('show');
                }, 2500);
            }
            if (messageAlert) {
                messageAlert.classList.add('show');
                setTimeout(function () {
                    messageAlert.classList.remove('show');
                }, 2500);
            }

            // Open the confirmation popup
            document.querySelectorAll('.delete-btn').forEach(function (button) {
                button.addEventListener('click', function () {
                    var ticketId = this.getAttribute('data-ticket-id');
                    var employeeId = this.getAttribute('data-employee-id') || 0; // Default to 0 if not set
                    confirmTicketId.value = ticketId;
                    confirmEmployeeId.value = employeeId;
                    confirmPopup.style.display = 'flex'; // Use flex to center the popup
                });
            });

            // Close the confirmation popup
            closeConfirmPopup.addEventListener('click', function () {
                confirmPopup.style.display = 'none';
            });

            window.addEventListener('click', function (event) {
                if (event.target === confirmPopup) {
                    confirmPopup.style.display = 'none';
                }
            });

            var modal = document.getElementById("popup");
            var closeModal = document.getElementsByClassName("close")[0];

            closeModal.addEventListener('click', function () {
                modal.style.display = "none";
            });

            window.addEventListener('click', function (event) {
                if (event.target === modal) {
                    modal.style.display = "none";
                }
            });
        });
    </script>
</body>
</html>
